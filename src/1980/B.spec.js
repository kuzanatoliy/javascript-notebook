const { isCubeRemoved } = require('./B');

describe('1980B. Choosing Cubes', () => {
  it.each`
    n     | f    | k    | array                             | result
    ${1}  | ${2} | ${2} | ${[4, 3, 3, 2, 3]}                | ${'MAYBE'}
    ${2}  | ${5} | ${3} | ${[4, 2, 1, 3, 5]}                | ${'YES'}
    ${3}  | ${5} | ${2} | ${[5, 2, 4, 1, 3]}                | ${'NO'}
    ${4}  | ${5} | ${5} | ${[1, 2, 5, 4, 3]}                | ${'YES'}
    ${5}  | ${5} | ${4} | ${[3, 1, 2, 4, 5]}                | ${'YES'}
    ${6}  | ${5} | ${5} | ${[4, 3, 2, 1, 5]}                | ${'YES'}
    ${7}  | ${5} | ${3} | ${[1, 2, 3, 1, 2, 3]}             | ${'MAYBE'}
    ${8}  | ${1} | ${1} | ${[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]} | ${'MAYBE'}
    ${9}  | ${1} | ${1} | ${[42]}                           | ${'YES'}
    ${10} | ${2} | ${3} | ${[2, 2, 1, 1, 2]}                | ${'YES'}
    ${11} | ${1} | ${1} | ${[2, 1]}                         | ${'YES'}
    ${12} | ${3} | ${1} | ${[3, 3, 2, 3, 2]}                | ${'NO'}
  `('Btasksse test: $n', ({ f, k, array, result }) => {
    expect(isCubeRemoved(f, k, array)).toBe(result);
  });
});
