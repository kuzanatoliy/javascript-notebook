const { getNumbers } = require('./A');

describe('1920A. Satisfying Constraints!', () => {
  it.each`
    n    | constraints                                                                                 | result
    ${1} | ${[[1, 3], [2, 10], [3, 1], [3, 5]]}                                                        | ${7}
    ${2} | ${[[1, 5], [2, 4]]}                                                                         | ${0}
    ${3} | ${[[3, 6], [3, 7], [1, 2], [1, 7], [3, 100], [3, 44], [2, 100], [2, 98], [1, 3], [3, 99]]}  | ${90}
    ${4} | ${[[1, 5], [2, 10], [1, 9], [2, 2], [3, 2], [3, 9]]}                                        | ${0}
    ${5} | ${[[1, 1], [2, 2], [3, 1], [3, 2], [3, 3]]}                                                 | ${0}
    ${6} | ${[[1, 10000], [2, 900000000], [3, 500000000], [1, 100000000], [3, 10000], [3, 900000001]]} | ${800000000}
  `('Base test: $n', ({ constraints, result }) => {
    expect(getNumbers(constraints)).toBe(result);
  });
});
