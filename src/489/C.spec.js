const { getMinMaxNumber } = require('./C');

describe('489C. Given Length and Sum of Digits...', () => {
  it.each`
    n    | length | sum    | result
    ${1} | ${2}   | ${15}  | ${['69', '96']}
    ${2} | ${3}   | ${0}   | ${[-1, -1]}
    ${3} | ${2}   | ${1}   | ${['10', '10']}
    ${4} | ${3}   | ${10}  | ${['109', '910']}
    ${5} | ${1}   | ${900} | ${[-1, -1]}
    ${6} | ${1}   | ${0}   | ${[0, 0]}
    ${7} | ${2}   | ${18}  | ${['99', '99']}
    ${8} | ${2}   | ${19}  | ${[-1, -1]}
    ${9} | ${100} | ${297} | ${['1000000000000000000000000000000000000000000000000000000000000000000899999999999999999999999999999999', '9999999999999999999999999999999990000000000000000000000000000000000000000000000000000000000000000000']}
  `('Base test: $n', ({ length, sum, result }) => {
    expect(getMinMaxNumber(length, sum)).toStrictEqual(result);
  });
});
